lua_shared_dict gray_users 10m;

init_by_lua_block {
    local redis = require "resty.redis"
    function is_gray_user(user_id)
        local red = redis:new()
        red:set_timeout(100)
        local ok, err = red:connect("redis", 6379)
        if not ok then return false end
        local res, err = red:sismember("gray-users", user_id)
        if res == 1 then return true else return false end
    end
}

server {
    listen 80;
    server_name seckill.example.com;
    location / {
        access_by_lua_block {
            local user_id = ngx.var.arg_userId
            if user_id and is_gray_user(user_id) then
                ngx.var.backend = "seckill-gray";
            else
                ngx.var.backend = "seckill-prod";
            end
        }
        proxy_pass http://$backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}

upstream seckill-prod {
    server seckill-service:8080;
}
upstream seckill-gray {
    server seckill-service-gray:8080;
} 